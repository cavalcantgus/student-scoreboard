{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_StudentForm = _resolveComponent(\"StudentForm\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_btn, {\n    onClick: $options.showForm\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Cadastrar\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_data_table, {\n    headers: $data.headers,\n    items: $data.students\n  }, {\n    body: _withCtx(({\n      items\n    }) => [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items, item => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: item.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade3), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade4), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.calculateAverage(item)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.calculateStatus(item)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_icon, {\n        onClick: $event => $options.editStudent(item)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"mdi-pencil\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_icon, {\n        onClick: $event => $options.deleteStudent(item)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"headers\", \"items\"]), _createVNode(_component_StudentForm, {\n    student: $data.currentStudent,\n    visible: $data.formVisible,\n    onSave: $options.save,\n    onCancel: _ctx.cancel\n  }, null, 8 /* PROPS */, [\"student\", \"visible\", \"onSave\", \"onCancel\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_v_btn","onClick","$options","showForm","default","_withCtx","_createTextVNode","_","_component_v_data_table","headers","$data","items","students","body","_createElementVNode","_Fragment","_renderList","item","key","id","_toDisplayString","name","grade1","grade2","grade3","grade4","calculateAverage","calculateStatus","_component_v_icon","$event","editStudent","deleteStudent","_component_StudentForm","student","currentStudent","visible","formVisible","onSave","save","onCancel","_ctx","cancel"],"sources":["C:\\Temp\\ws-vscode\\student-score-board\\src\\components\\StudentTable.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-btn @click=\"showForm\">Cadastrar</v-btn>\r\n        <v-data-table :headers=\"headers\" :items=\"students\">\r\n            <template v-slot:body=\"{ items }\">   \r\n                <tbody>\r\n                    <tr v-for=\"item in items\" :key=\"item.id\">\r\n                        <td>{{item.name}}</td>\r\n                        <td>{{item.grade1}}</td>\r\n                        <td>{{item.grade2}}</td>\r\n                        <td>{{item.grade3}}</td>\r\n                        <td>{{item.grade4}}</td>\r\n                        <td>{{calculateAverage(item)}}</td>\r\n                        <td>{{calculateStatus(item)}}</td>\r\n                        <td>\r\n                            <v-icon @click=\"editStudent(item)\">mdi-pencil</v-icon>\r\n                            <v-icon @click=\"deleteStudent(item)\">mdi-delete</v-icon>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </template>\r\n        </v-data-table>\r\n\r\n        <StudentForm \r\n        :student=\"currentStudent\"\r\n        :visible=\"formVisible\"\r\n        @save=\"save\"\r\n        @cancel=\"cancel\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport StudentForm from './StudentForm.vue'\r\n\r\nexport default {\r\n   components: {\r\n    StudentForm\r\n   },\r\n   data() {\r\n    return{\r\n        headers: [\r\n            {text: 'Nome', value: 'name'},\r\n            {text: 'Nota 1', value: 'grade1'},\r\n            {text: 'Nota 2', value: 'grade2'},\r\n            {text: 'Nota 3', value: 'grade3'},\r\n            {text: 'Nota 4', value: 'grade4'},\r\n            {text: 'Média', value: 'average'},\r\n            {text: 'Situação', value: 'status'},\r\n            {text: 'Ações', value: 'actions'}\r\n        ],\r\n        students: [],\r\n        currentStudent: {},\r\n        formVisible: false\r\n    }\r\n   },\r\n   methods: {\r\n    showForm(student = {}) {\r\n        this.currentStudent = {...student}\r\n        this.formVisible = true\r\n    },\r\n    closeForm () {\r\n        this.formVisible = false\r\n    },\r\n    save(student){\r\n        if(student.id) {\r\n            const index = this.students.findIndex(s => s.id === student.id)\r\n            if(index !== -1){\r\n                this.$set(this.students, index, student)\r\n            }\r\n        } else{\r\n            student.id = Date.now()\r\n            this.students.push(student)\r\n        }\r\n        this.closeForm()\r\n    },\r\n    editStudent(student) {\r\n      this.showForm(student)\r\n    },\r\n    deleteStudent(student) {\r\n      this.students = this.students.filter(s => s.id !== student.id)\r\n    },\r\n    calculateAverage(student) {\r\n      const grades = [student.grade1, student.grade2, student.grade3, student.grade4].map(Number)\r\n      const total = grades.reduce((sum, grade) => sum + grade, 0)\r\n      return (total / grades.length).toFixed(2)\r\n    },\r\n    calculateStatus(student) {\r\n      return this.calculateAverage(student) >= 7 ? 'Approved' : 'Failed'\r\n    }\r\n   }\r\n}\r\n</script>"],"mappings":";;;;;;uBACIA,mBAAA,CA4BM,cA3BFC,YAAA,CAA0CC,gBAAA;IAAlCC,OAAK,EAAEC,QAAA,CAAAC;EAAQ;IAF/BC,OAAA,EAAAC,QAAA,CAEiC,MAAS,CAF1CC,gBAAA,CAEiC,WAAS,E;IAF1CC,CAAA;kCAGQR,YAAA,CAkBeS,uBAAA;IAlBAC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,KAAK,EAAED,KAAA,CAAAE;;IACpBC,IAAI,EAAAR,QAAA,CACjB,CAcQ;MAfaM;IAAK,OAC1BG,mBAAA,CAcQ,iB,kBAbJhB,mBAAA,CAYKiB,SAAA,QAlBzBC,WAAA,CAMuCL,KAAK,EAAbM,IAAI;2BAAfnB,mBAAA,CAYK;QAZsBoB,GAAG,EAAED,IAAI,CAACE;UACjCL,mBAAA,CAAsB,YAAAM,gBAAA,CAAhBH,IAAI,CAACI,IAAI,kBACfP,mBAAA,CAAwB,YAAAM,gBAAA,CAAlBH,IAAI,CAACK,MAAM,kBACjBR,mBAAA,CAAwB,YAAAM,gBAAA,CAAlBH,IAAI,CAACM,MAAM,kBACjBT,mBAAA,CAAwB,YAAAM,gBAAA,CAAlBH,IAAI,CAACO,MAAM,kBACjBV,mBAAA,CAAwB,YAAAM,gBAAA,CAAlBH,IAAI,CAACQ,MAAM,kBACjBX,mBAAA,CAAmC,YAAAM,gBAAA,CAA7BlB,QAAA,CAAAwB,gBAAgB,CAACT,IAAI,mBAC3BH,mBAAA,CAAkC,YAAAM,gBAAA,CAA5BlB,QAAA,CAAAyB,eAAe,CAACV,IAAI,mBAC1BH,mBAAA,CAGK,aAFDf,YAAA,CAAsD6B,iBAAA;QAA7C3B,OAAK,EAAA4B,MAAA,IAAE3B,QAAA,CAAA4B,WAAW,CAACb,IAAI;;QAf5Db,OAAA,EAAAC,QAAA,CAe+D,MAAU,CAfzEC,gBAAA,CAe+D,YAAU,E;QAfzEC,CAAA;wDAgB4BR,YAAA,CAAwD6B,iBAAA;QAA/C3B,OAAK,EAAA4B,MAAA,IAAE3B,QAAA,CAAA6B,aAAa,CAACd,IAAI;;QAhB9Db,OAAA,EAAAC,QAAA,CAgBiE,MAAU,CAhB3EC,gBAAA,CAgBiE,YAAU,E;QAhB3EC,CAAA;;;IAAAA,CAAA;2CAuBQR,YAAA,CAKEiC,sBAAA;IAJDC,OAAO,EAAEvB,KAAA,CAAAwB,cAAc;IACvBC,OAAO,EAAEzB,KAAA,CAAA0B,WAAW;IACpBC,MAAI,EAAEnC,QAAA,CAAAoC,IAAI;IACVC,QAAM,EAAEC,IAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}