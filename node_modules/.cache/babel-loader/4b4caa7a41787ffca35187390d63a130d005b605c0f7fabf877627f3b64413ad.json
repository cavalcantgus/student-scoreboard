{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_StudentForm = _resolveComponent(\"StudentForm\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_btn, {\n    color: \"primary\",\n    onClick: $options.showForm\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Cadastrar\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_data_table, {\n    headers: $data.headers,\n    items: $data.students,\n    \"item-key\": \"id\"\n  }, {\n    [`item.name`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n    [`item.subject`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.subject), 1 /* TEXT */)]),\n    [`item.grade1`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.grade1), 1 /* TEXT */)]),\n    [`item.grade2`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.grade2), 1 /* TEXT */)]),\n    [`item.grade3`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.grade3), 1 /* TEXT */)]),\n    [`item.grade4`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString(item.grade4), 1 /* TEXT */)]),\n    [`item.average`]: _withCtx(({\n      item\n    }) => [_createTextVNode(_toDisplayString($options.calculateAverage(item)), 1 /* TEXT */)]),\n    [`item.status`]: _withCtx(({\n      item\n    }) => [_createVNode(_component_v_chip, {\n      color: $options.getColor(item),\n      class: \"status-chip\",\n      \"text-color\": \"white\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.calculateStatus(item)), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])]),\n    [`item.actions`]: _withCtx(({\n      item\n    }) => [_createVNode(_component_v_icon, {\n      onClick: $event => $options.editStudent(item)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"mdi-pencil\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_icon, {\n      onClick: $event => $options.deleteStudent(item)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n    _: 2 /* DYNAMIC */\n  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"headers\", \"items\"]), _createVNode(_component_StudentForm, {\n    student: $data.currentStudent,\n    visible: $data.formVisible,\n    onSave: $options.saveStudent,\n    onCancel: $options.closeForm\n  }, null, 8 /* PROPS */, [\"student\", \"visible\", \"onSave\", \"onCancel\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_v_btn","color","onClick","$options","showForm","default","_withCtx","_createTextVNode","_","_component_v_data_table","headers","$data","items","students","item","_toDisplayString","name","subject","grade1","grade2","grade3","grade4","calculateAverage","_component_v_chip","getColor","class","calculateStatus","_component_v_icon","$event","editStudent","deleteStudent","_component_StudentForm","student","currentStudent","visible","formVisible","onSave","saveStudent","onCancel","closeForm"],"sources":["C:\\Temp\\ws-vscode\\student-score-board\\src\\components\\StudentTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-btn color=\"primary\" @click=\"showForm\">Cadastrar</v-btn>\r\n    <v-data-table :headers=\"headers\" :items=\"students\" item-key=\"id\">\r\n      <template v-slot:[`item.name`]=\"{ item }\">\r\n        {{ item.name }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.subject`]=\"{ item }\">\r\n        {{ item.subject}}\r\n      </template>\r\n\r\n      <template v-slot:[`item.grade1`]=\"{ item }\">\r\n        {{ item.grade1 }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.grade2`]=\"{ item }\">\r\n        {{ item.grade2 }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.grade3`]=\"{ item }\">\r\n        {{ item.grade3 }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.grade4`]=\"{ item }\">\r\n        {{ item.grade4 }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.average`]=\"{ item }\">\r\n        {{ calculateAverage(item) }}\r\n      </template>\r\n\r\n      <template v-slot:[`item.status`]=\"{ item } \">\r\n        <v-chip :color=\"getColor(item)\" class=\"status-chip\" text-color=\"white\">\r\n            {{ calculateStatus(item) }}\r\n        </v-chip>\r\n      </template>\r\n\r\n      <template v-slot:[`item.actions`]=\"{ item }\">\r\n        <v-icon @click=\"editStudent(item)\">mdi-pencil</v-icon>\r\n        <v-icon @click=\"deleteStudent(item)\">mdi-delete</v-icon>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <StudentForm \r\n      :student=\"currentStudent\"\r\n      :visible=\"formVisible\"\r\n      @save=\"saveStudent\"\r\n      @cancel=\"closeForm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StudentForm from './StudentForm.vue';\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport default {\r\n  components: {\r\n    StudentForm\r\n  },\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { title: 'Nome', value: 'name' },\r\n        { title: 'Disciplina', value: 'subject' },\r\n        { title: 'Nota 1', value: 'grade1' },\r\n        { title: 'Nota 2', value: 'grade2' },\r\n        { title: 'Nota 3', value: 'grade3' },\r\n        { title: 'Nota 4', value: 'grade4' },\r\n        { title: 'Média', value: 'average' },\r\n        { title: 'Situação', value: 'status' },\r\n        { title: 'Ações', value: 'actions', sortable: false }\r\n      ],\r\n      students: [],\r\n      currentStudent: {},\r\n      formVisible: false\r\n    };\r\n  },\r\n  methods: {\r\n    showForm(student = {}) {\r\n      this.currentStudent = { ...student }\r\n      this.formVisible = true\r\n    },\r\n    closeForm() {\r\n      this.formVisible = false\r\n    },\r\n    async saveStudent(student) { \r\n      if (student.id) {\r\n        const index = this.students.findIndex(s => s.id === student.id)\r\n        if (index !== -1) {\r\n          this.students[index] = student\r\n        }\r\n      } else {\r\n        student.id = uuidv4()\r\n        this.students.push(student)\r\n      }\r\n      this.closeForm();\r\n    },\r\n    editStudent(student) {\r\n      this.showForm(student)\r\n    },\r\n    deleteStudent(student) {\r\n      this.students = this.students.filter(s => s.id !== student.id)\r\n    },\r\n    calculateAverage(student) {\r\n      const grades = [student.grade1, student.grade2, student.grade3, student.grade4].map(Number)\r\n      const total = grades.reduce((sum, grade) => sum + grade, 0)\r\n      return (total / grades.length).toFixed(2)\r\n    },\r\n    calculateStatus(student) {\r\n      return this.calculateAverage(student) >= 7 ? 'Aprovado' : 'Reprovado'\r\n    },\r\n    getColor(student) {\r\n        return this.calculateStatus(student) === 'Aprovado' ? 'green' : 'red'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.status-chip {\r\n    width: 100%;\r\n    text-align: center;\r\n    font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;uBACEA,mBAAA,CAiDM,cAhDJC,YAAA,CAA0DC,gBAAA;IAAnDC,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAFnCC,OAAA,EAAAC,QAAA,CAE6C,MAAS,CAFtDC,gBAAA,CAE6C,WAAS,E;IAFtDC,CAAA;kCAGIT,YAAA,CAuCeU,uBAAA;IAvCAC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,KAAK,EAAED,KAAA,CAAAE,QAAQ;IAAE,UAAQ,EAAC;;IACzC,eAAaP,QAAA,CAC5B,CAAe;MADiBQ;IAAI,OAJ5CP,gBAAA,CAAAQ,gBAAA,CAKWD,IAAI,CAACE,IAAI,iB;IAGG,kBAAgBV,QAAA,CAC/B,CAAiB;MADkBQ;IAAI,OAR/CP,gBAAA,CAAAQ,gBAAA,CASWD,IAAI,CAACG,OAAO,iB;IAGA,iBAAeX,QAAA,CAC9B,CAAiB;MADiBQ;IAAI,OAZ9CP,gBAAA,CAAAQ,gBAAA,CAaWD,IAAI,CAACI,MAAM,iB;IAGC,iBAAeZ,QAAA,CAC9B,CAAiB;MADiBQ;IAAI,OAhB9CP,gBAAA,CAAAQ,gBAAA,CAiBWD,IAAI,CAACK,MAAM,iB;IAGC,iBAAeb,QAAA,CAC9B,CAAiB;MADiBQ;IAAI,OApB9CP,gBAAA,CAAAQ,gBAAA,CAqBWD,IAAI,CAACM,MAAM,iB;IAGC,iBAAed,QAAA,CAC9B,CAAiB;MADiBQ;IAAI,OAxB9CP,gBAAA,CAAAQ,gBAAA,CAyBWD,IAAI,CAACO,MAAM,iB;IAGC,kBAAgBf,QAAA,CAC/B,CAA4B;MADOQ;IAAI,OA5B/CP,gBAAA,CAAAQ,gBAAA,CA6BWZ,QAAA,CAAAmB,gBAAgB,CAACR,IAAI,kB;IAGT,iBAAeR,QAAA,CAC9B,CAES;MAHyBQ;IAAI,OACtCf,YAAA,CAESwB,iBAAA;MAFAtB,KAAK,EAAEE,QAAA,CAAAqB,QAAQ,CAACV,IAAI;MAAGW,KAAK,EAAC,aAAa;MAAC,YAAU,EAAC;;MAjCvEpB,OAAA,EAAAC,QAAA,CAkCY,MAA2B,CAlCvCC,gBAAA,CAAAQ,gBAAA,CAkCeZ,QAAA,CAAAuB,eAAe,CAACZ,IAAI,kB;MAlCnCN,CAAA;;IAsCuB,kBAAgBF,QAAA,CAC/B,CAAsD;MADnBQ;IAAI,OACvCf,YAAA,CAAsD4B,iBAAA;MAA7CzB,OAAK,EAAA0B,MAAA,IAAEzB,QAAA,CAAA0B,WAAW,CAACf,IAAI;;MAvCxCT,OAAA,EAAAC,QAAA,CAuC2C,MAAU,CAvCrDC,gBAAA,CAuC2C,YAAU,E;MAvCrDC,CAAA;sDAwCQT,YAAA,CAAwD4B,iBAAA;MAA/CzB,OAAK,EAAA0B,MAAA,IAAEzB,QAAA,CAAA2B,aAAa,CAAChB,IAAI;;MAxC1CT,OAAA,EAAAC,QAAA,CAwC6C,MAAU,CAxCvDC,gBAAA,CAwC6C,YAAU,E;MAxCvDC,CAAA;;IAAAA,CAAA;6DA4CIT,YAAA,CAKEgC,sBAAA;IAJCC,OAAO,EAAErB,KAAA,CAAAsB,cAAc;IACvBC,OAAO,EAAEvB,KAAA,CAAAwB,WAAW;IACpBC,MAAI,EAAEjC,QAAA,CAAAkC,WAAW;IACjBC,QAAM,EAAEnC,QAAA,CAAAoC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}