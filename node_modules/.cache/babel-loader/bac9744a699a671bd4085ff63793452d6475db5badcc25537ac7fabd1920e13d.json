{"ast":null,"code":"export default {\n  data: () => ({\n    name: '',\n    nameRules: [value => !!value || 'Name is required'],\n    grade1: null,\n    grade2: null,\n    grade3: null,\n    grade4: null\n  }),\n  methods: {\n    gradeValidation(gradeNumber) {\n      return [value => !!value || `You must enter a grade ${gradeNumber}`, value => value && !isNaN(value) && value >= 0 && value <= 10 || `Grade ${gradeNumber} must be a number between 0 and 10`];\n    },\n    async validate() {\n      const {\n        valid\n      } = await this.$refs.form.validate();\n      if (valid) {\n        this.averageCalculation();\n        this.$refs.form.reset();\n        this.$refs.form.resetValidation();\n      }\n    },\n    averageCalculation() {\n      const grades = [this.grade1, this.grade2, this.grade3, this.grade4].map(grade => Number(grade));\n      const total = grades.reduce((sum, grade) => sum + grade, 0);\n      const average = total / grades.length;\n      return average;\n    },\n    checkStatus() {\n      const average = this.averageCalculation();\n      const status = average >= 7 ? 'Aproved' : 'Failed';\n    }\n  }\n};","map":{"version":3,"names":["data","name","nameRules","value","grade1","grade2","grade3","grade4","methods","gradeValidation","gradeNumber","isNaN","validate","valid","$refs","form","averageCalculation","reset","resetValidation","grades","map","grade","Number","total","reduce","sum","average","length","checkStatus","status"],"sources":["C:\\Temp\\ws-vscode\\student-score-board\\src\\App.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-navigation-drawer v-model=\"drawer\">\n      <!--  -->\n    </v-navigation-drawer>\n\n    <v-app-bar>\n      <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n      <v-app-bar-title>Register Grades</v-app-bar-title>\n    </v-app-bar>\n\n    <v-main>\n      <v-sheet class=\"mx-auto\" width=\"300\">\n        <v-form ref=\"form\">\n          <v-text-field v-model=\"name\" :rules=\"nameRules\" label=\"Complete name\" required></v-text-field>\n          <v-text-field v-model=\"grade1\" :rules=\"gradeValidation(1)\" label=\"Grade 1\" required></v-text-field>\n          <v-text-field v-model=\"grade2\" :rules=\"gradeValidation(2)\" label=\"Grade 2\" requirede></v-text-field>\n          <v-text-field v-model=\"grade3\" :rules=\"gradeValidation(3)\" label=\"Grade 3\" required></v-text-field>\n          <v-text-field v-model=\"grade4\" :rules=\"gradeValidation(4)\" label=\"Grade 4\" required></v-text-field>\n          <v-btn class=\"mt-2\" block @click=\"validate\">Submit</v-btn>\n        </v-form>\n      </v-sheet>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n\nexport default {\n  data: () => ({\n    name: '',\n    nameRules: [\n      value => !!value || 'Name is required',\n    ],\n    grade1: null,\n    grade2: null,\n    grade3: null,\n    grade4: null,\n  }),\n\n  methods: {\n    gradeValidation (gradeNumber) {\n      return [\n        value => !!value || `You must enter a grade ${gradeNumber}`,\n        value => (value && !isNaN(value) && value >= 0 && value <= 10) || `Grade ${gradeNumber} must be a number between 0 and 10`\n      ]\n    },\n\n    async validate () {\n      const { valid } = await this.$refs.form.validate()\n      if(valid) {\n        this.averageCalculation()\n        this.$refs.form.reset()\n        this.$refs.form.resetValidation()\n      }\n    },\n    averageCalculation(){\n      const grades = [this.grade1, this.grade2, this.grade3, this.grade4].map(grade => Number(grade))\n      const total = grades.reduce((sum, grade) => sum + grade, 0)\n      const average = total / grades.length\n      return average\n    },\n    checkStatus(){\n      const average = this.averageCalculation()\n      const status = average >= 7 ? 'Aproved' : 'Failed'\n    }\n  }\n}\n</script>\n\n "],"mappings":"AA6BA,eAAe;EACbA,IAAI,EAAEA,CAAA,MAAO;IACXC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,CACTC,KAAI,IAAK,CAAC,CAACA,KAAI,IAAK,kBAAkB,CACvC;IACDC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,eAAcA,CAAGC,WAAW,EAAE;MAC5B,OAAO,CACLP,KAAI,IAAK,CAAC,CAACA,KAAI,IAAK,0BAA0BO,WAAW,EAAE,EAC3DP,KAAI,IAAMA,KAAI,IAAK,CAACQ,KAAK,CAACR,KAAK,KAAKA,KAAI,IAAK,KAAKA,KAAI,IAAK,EAAE,IAAK,SAASO,WAAW,oCAAmC,CAC3H;IACF,CAAC;IAED,MAAME,QAAOA,CAAA,EAAK;MAChB,MAAM;QAAEC;MAAM,IAAI,MAAM,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC;MACjD,IAAGC,KAAK,EAAE;QACR,IAAI,CAACG,kBAAkB,CAAC;QACxB,IAAI,CAACF,KAAK,CAACC,IAAI,CAACE,KAAK,CAAC;QACtB,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,eAAe,CAAC;MAClC;IACF,CAAC;IACDF,kBAAkBA,CAAA,EAAE;MAClB,MAAMG,MAAK,GAAI,CAAC,IAAI,CAACf,MAAM,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,MAAM,CAAC,CAACa,GAAG,CAACC,KAAI,IAAKC,MAAM,CAACD,KAAK,CAAC;MAC9F,MAAME,KAAI,GAAIJ,MAAM,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAKI,GAAE,GAAIJ,KAAK,EAAE,CAAC;MAC1D,MAAMK,OAAM,GAAIH,KAAI,GAAIJ,MAAM,CAACQ,MAAK;MACpC,OAAOD,OAAM;IACf,CAAC;IACDE,WAAWA,CAAA,EAAE;MACX,MAAMF,OAAM,GAAI,IAAI,CAACV,kBAAkB,CAAC;MACxC,MAAMa,MAAK,GAAIH,OAAM,IAAK,IAAI,SAAQ,GAAI,QAAO;IACnD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}