{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_StudentForm = _resolveComponent(\"StudentForm\", true);\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_btn, {\n    color: \"primary\",\n    onClick: $options.showForm\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Add Student\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_data_table, {\n    headers: $data.headers,\n    items: $data.students\n  }, {\n    body: _withCtx(({\n      items\n    }) => [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items, item => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: item.id\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade3), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.grade4), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.calculateAverage(item)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.calculateStatus(item)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_icon, {\n        onClick: $event => $options.editStudent(item)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"mdi-pencil\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_icon, {\n        onClick: $event => $options.deleteStudent(item)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"headers\", \"items\"]), _createVNode(_component_StudentForm, {\n    student: $data.currentStudent,\n    visible: $data.formVisible,\n    onSave: $options.saveStudent,\n    onCancel: $options.closeForm\n  }, null, 8 /* PROPS */, [\"student\", \"visible\", \"onSave\", \"onCancel\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_v_btn","color","onClick","$options","showForm","default","_withCtx","_createTextVNode","_","_component_v_data_table","headers","$data","items","students","body","_createElementVNode","_Fragment","_renderList","item","key","id","_toDisplayString","name","grade1","grade2","grade3","grade4","calculateAverage","calculateStatus","_component_v_icon","$event","editStudent","deleteStudent","_component_StudentForm","student","currentStudent","visible","formVisible","onSave","saveStudent","onCancel","closeForm"],"sources":["C:\\Temp\\ws-vscode\\student-score-board\\src\\components\\StudentForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-btn color=\"primary\" @click=\"showForm\">Add Student</v-btn>\r\n    <v-data-table :headers=\"headers\" :items=\"students\">\r\n      <template v-slot:body=\"{ items }\">\r\n        <tbody>\r\n          <tr v-for=\"item in items\" :key=\"item.id\">\r\n            <td>{{ item.name }}</td>\r\n            <td>{{ item.grade1 }}</td>\r\n            <td>{{ item.grade2 }}</td>\r\n            <td>{{ item.grade3 }}</td>\r\n            <td>{{ item.grade4 }}</td>\r\n            <td>{{ calculateAverage(item) }}</td>\r\n            <td>{{ calculateStatus(item) }}</td>\r\n            <td>\r\n              <v-icon @click=\"editStudent(item)\">mdi-pencil</v-icon>\r\n              <v-icon @click=\"deleteStudent(item)\">mdi-delete</v-icon>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <StudentForm\r\n      :student=\"currentStudent\"\r\n      :visible=\"formVisible\"\r\n      @save=\"saveStudent\"\r\n      @cancel=\"closeForm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StudentForm from './StudentForm.vue';\r\n\r\nexport default {\r\n  components: {\r\n    StudentForm\r\n  },\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { text: 'Name', value: 'name' },\r\n        { text: 'Grade 1', value: 'grade1' },\r\n        { text: 'Grade 2', value: 'grade2' },\r\n        { text: 'Grade 3', value: 'grade3' },\r\n        { text: 'Grade 4', value: 'grade4' },\r\n        { text: 'Average', value: 'average' },\r\n        { text: 'Status', value: 'status' },\r\n        { text: 'Actions', value: 'actions', sortable: false }\r\n      ],\r\n      students: [],\r\n      currentStudent: {},\r\n      formVisible: false\r\n    };\r\n  },\r\n  methods: {\r\n    showForm(student = {}) {\r\n      this.currentStudent = { ...student }; // Copia o aluno para edição\r\n      this.formVisible = true;\r\n    },\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n    saveStudent(student) {\r\n      if (student.id) {\r\n        // Editar aluno existente\r\n        const index = this.students.findIndex(s => s.id === student.id);\r\n        if (index !== -1) {\r\n          this.$set(this.students, index, student);\r\n        }\r\n      } else {\r\n        // Adicionar novo aluno\r\n        student.id = Date.now(); // ID único temporário\r\n        this.students.push(student);\r\n      }\r\n      this.closeForm();\r\n    },\r\n    editStudent(student) {\r\n      this.showForm(student);\r\n    },\r\n    deleteStudent(student) {\r\n      this.students = this.students.filter(s => s.id !== student.id);\r\n    },\r\n    calculateAverage(student) {\r\n      const grades = [student.grade1, student.grade2, student.grade3, student.grade4].map(Number);\r\n      const total = grades.reduce((sum, grade) => sum + grade, 0);\r\n      return (total / grades.length).toFixed(2);\r\n    },\r\n    calculateStatus(student) {\r\n      return this.calculateAverage(student) >= 7 ? 'Approved' : 'Failed';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Adicione o estilo específico do componente aqui */\r\n</style>\r\n"],"mappings":";;;;;;uBACEA,mBAAA,CA4BM,cA3BJC,YAAA,CAA4DC,gBAAA;IAArDC,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAFnCC,OAAA,EAAAC,QAAA,CAE6C,MAAW,CAFxDC,gBAAA,CAE6C,aAAW,E;IAFxDC,CAAA;kCAGIT,YAAA,CAkBeU,uBAAA;IAlBAC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,KAAK,EAAED,KAAA,CAAAE;;IACtBC,IAAI,EAAAR,QAAA,CACnB,CAcQ;MAfeM;IAAK,OAC5BG,mBAAA,CAcQ,iB,kBAbNjB,mBAAA,CAYKkB,SAAA,QAlBfC,WAAA,CAM6BL,KAAK,EAAbM,IAAI;2BAAfpB,mBAAA,CAYK;QAZsBqB,GAAG,EAAED,IAAI,CAACE;UACnCL,mBAAA,CAAwB,YAAAM,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBP,mBAAA,CAA0B,YAAAM,gBAAA,CAAnBH,IAAI,CAACK,MAAM,kBAClBR,mBAAA,CAA0B,YAAAM,gBAAA,CAAnBH,IAAI,CAACM,MAAM,kBAClBT,mBAAA,CAA0B,YAAAM,gBAAA,CAAnBH,IAAI,CAACO,MAAM,kBAClBV,mBAAA,CAA0B,YAAAM,gBAAA,CAAnBH,IAAI,CAACQ,MAAM,kBAClBX,mBAAA,CAAqC,YAAAM,gBAAA,CAA9BlB,QAAA,CAAAwB,gBAAgB,CAACT,IAAI,mBAC5BH,mBAAA,CAAoC,YAAAM,gBAAA,CAA7BlB,QAAA,CAAAyB,eAAe,CAACV,IAAI,mBAC3BH,mBAAA,CAGK,aAFHhB,YAAA,CAAsD8B,iBAAA;QAA7C3B,OAAK,EAAA4B,MAAA,IAAE3B,QAAA,CAAA4B,WAAW,CAACb,IAAI;;QAf9Cb,OAAA,EAAAC,QAAA,CAeiD,MAAU,CAf3DC,gBAAA,CAeiD,YAAU,E;QAf3DC,CAAA;wDAgBcT,YAAA,CAAwD8B,iBAAA;QAA/C3B,OAAK,EAAA4B,MAAA,IAAE3B,QAAA,CAAA6B,aAAa,CAACd,IAAI;;QAhBhDb,OAAA,EAAAC,QAAA,CAgBmD,MAAU,CAhB7DC,gBAAA,CAgBmD,YAAU,E;QAhB7DC,CAAA;;;IAAAA,CAAA;2CAuBIT,YAAA,CAKEkC,sBAAA;IAJCC,OAAO,EAAEvB,KAAA,CAAAwB,cAAc;IACvBC,OAAO,EAAEzB,KAAA,CAAA0B,WAAW;IACpBC,MAAI,EAAEnC,QAAA,CAAAoC,WAAW;IACjBC,QAAM,EAAErC,QAAA,CAAAsC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}