{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport StudentForm from './StudentForm.vue';\nexport default {\n  components: {\n    StudentForm\n  },\n  data() {\n    return {\n      headers: [{\n        text: 'Nome',\n        value: 'name'\n      }, {\n        text: 'Nota 1',\n        value: 'grade1'\n      }, {\n        text: 'Nota 2',\n        value: 'grade2'\n      }, {\n        text: 'Nota 3',\n        value: 'grade3'\n      }, {\n        text: 'Nota 4',\n        value: 'grade4'\n      }, {\n        text: 'Média',\n        value: 'average'\n      }, {\n        text: 'Situação',\n        value: 'status'\n      }, {\n        text: 'Ações',\n        value: 'actions',\n        sortable: false\n      }],\n      students: [],\n      currentStudent: {},\n      formVisible: false\n    };\n  },\n  methods: {\n    showForm(student = {}) {\n      this.currentStudent = {\n        ...student\n      };\n      this.formVisible = true;\n    },\n    closeForm() {\n      this.formVisible = false;\n    },\n    saveStudent(student) {\n      if (student.id) {\n        const index = this.students.findIndex(s => s.id === student.id);\n        if (index !== -1) {\n          this.$set(this.students, index, student);\n        }\n      } else {\n        student.id = Date.now();\n        this.students.push(student);\n      }\n      this.closeForm();\n    },\n    editStudent(student) {\n      this.showForm(student);\n    },\n    deleteStudent(student) {\n      this.students = this.students.filter(s => s.id !== student.id);\n    },\n    calculateAverage(student) {\n      const grades = [student.grade1, student.grade2, student.grade3, student.grade4].map(Number);\n      const total = grades.reduce((sum, grade) => sum + grade, 0);\n      return (total / grades.length).toFixed(2);\n    },\n    calculateStatus(student) {\n      return this.calculateAverage(student) >= 7 ? 'Aprovado' : 'Reprovado';\n    }\n  }\n};","map":{"version":3,"names":["StudentForm","components","data","headers","text","value","sortable","students","currentStudent","formVisible","methods","showForm","student","closeForm","saveStudent","id","index","findIndex","s","$set","Date","now","push","editStudent","deleteStudent","filter","calculateAverage","grades","grade1","grade2","grade3","grade4","map","Number","total","reduce","sum","grade","length","toFixed","calculateStatus"],"sources":["C:\\Temp\\ws-vscode\\student-score-board\\src\\components\\StudentTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Botão para adicionar alunos -->\r\n    <v-btn color=\"primary\" @click=\"showForm\">Cadastrar</v-btn>\r\n\r\n    <!-- Tabela de alunos -->\r\n    <v-data-table :headers=\"headers\" :items=\"students\" item-key=\"id\" class=\"elevation-1\">\r\n      <!-- Utilizando slots corretamente -->\r\n      <template #item.name=\"{ item }\">\r\n        {{ item.name }}\r\n      </template>\r\n\r\n      <template #item.grade1=\"{ item }\">\r\n        {{ item.grade1 }}\r\n      </template>\r\n\r\n      <template #item.grade2=\"{ item }\">\r\n        {{ item.grade2 }}\r\n      </template>\r\n\r\n      <template #item.grade3=\"{ item }\">\r\n        {{ item.grade3 }}\r\n      </template>\r\n\r\n      <template #item.grade4=\"{ item }\">\r\n        {{ item.grade4 }}\r\n      </template>\r\n\r\n      <template #item.average=\"{ item }\">\r\n        {{ calculateAverage(item) }}\r\n      </template>\r\n\r\n      <template #item.status=\"{ item }\">\r\n        {{ calculateStatus(item) }}\r\n      </template>\r\n\r\n      <template #item.actions=\"{ item }\">\r\n        <v-icon @click=\"editStudent(item)\">mdi-pencil</v-icon>\r\n        <v-icon @click=\"deleteStudent(item)\">mdi-delete</v-icon>\r\n      </template>\r\n    </v-data-table>\r\n\r\n    <!-- Formulário de alunos -->\r\n    <StudentForm \r\n      :student=\"currentStudent\"\r\n      :visible=\"formVisible\"\r\n      @save=\"saveStudent\"\r\n      @cancel=\"closeForm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StudentForm from './StudentForm.vue';\r\n\r\nexport default {\r\n  components: {\r\n    StudentForm\r\n  },\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { text: 'Nome', value: 'name' },\r\n        { text: 'Nota 1', value: 'grade1' },\r\n        { text: 'Nota 2', value: 'grade2' },\r\n        { text: 'Nota 3', value: 'grade3' },\r\n        { text: 'Nota 4', value: 'grade4' },\r\n        { text: 'Média', value: 'average' },\r\n        { text: 'Situação', value: 'status' },\r\n        { text: 'Ações', value: 'actions', sortable: false }\r\n      ],\r\n      students: [],\r\n      currentStudent: {},\r\n      formVisible: false\r\n    };\r\n  },\r\n  methods: {\r\n    showForm(student = {}) {\r\n      this.currentStudent = { ...student };\r\n      this.formVisible = true;\r\n    },\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n    saveStudent(student) {\r\n      if (student.id) {\r\n        const index = this.students.findIndex(s => s.id === student.id);\r\n        if (index !== -1) {\r\n          this.$set(this.students, index, student);\r\n        }\r\n      } else {\r\n        student.id = Date.now();\r\n        this.students.push(student);\r\n      }\r\n      this.closeForm();\r\n    },\r\n    editStudent(student) {\r\n      this.showForm(student);\r\n    },\r\n    deleteStudent(student) {\r\n      this.students = this.students.filter(s => s.id !== student.id);\r\n    },\r\n    calculateAverage(student) {\r\n      const grades = [student.grade1, student.grade2, student.grade3, student.grade4].map(Number);\r\n      const total = grades.reduce((sum, grade) => sum + grade, 0);\r\n      return (total / grades.length).toFixed(2);\r\n    },\r\n    calculateStatus(student) {\r\n      return this.calculateAverage(student) >= 7 ? 'Aprovado' : 'Reprovado';\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}